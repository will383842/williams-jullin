rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    // --- OPTION A : admin identifié par email ---
    function isAdmin() {
      return isSignedIn() && request.auth.token.email == "williamsjullin@gmail.com";
    }

    // --- OPTION B (plus robuste, à activer plus tard si besoin) : 
    // Vérifie l'existence d'un doc rôle dans Firestore
    // function isAdmin() {
    //   return isSignedIn() &&
    //     exists(/databases/$(database)/documents/_roles/admins/$(request.auth.uid));
    // }

    // --- Blog posts ---
    match /posts/{id} {
      allow read: if true;                  // lecture publique
      allow create, update, delete: if isAdmin(); // écriture réservée admin
    }

    // --- Contacts (formulaire public) ---
    match /contacts/{id} {
      allow create: if true;                  // tout le monde peut ENVOYER
      allow read, update, delete: if isAdmin(); // seul l’admin peut lire/modifier/supprimer
    }

    // --- Investors (formulaire public) ---
    match /investors/{id} {
      allow create: if true;                  // tout le monde peut ENVOYER
      allow read, update, delete: if isAdmin(); // seul l’admin peut lire/modifier/supprimer
    }

    // --- Analytics (tracking des événements) ---
    match /analytics/{docId} {
      allow create: if true;                  // écriture libre
      allow read, update, delete: if isAdmin(); // lecture/suppression admin uniquement
    }

    // --- Collections de test (désactivées en prod) ---
    match /test/{id} {
      allow read, write: if false;
    }

    // --- Par défaut : tout est interdit ---
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
